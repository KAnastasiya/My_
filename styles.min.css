/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}@media only screen and (max-width:480px){.grid_1{display:inline;float:left;margin-left:5px;margin-right:5px;width:310px}.outer_content_wrapper{width:100%;position:relative}.inner_content_wrapper{width:310px;margin:0 auto}.negative_margin_wrapper{margin-left:-5px;margin-right:-5px}}@media only screen and (min-width:481px){.grid_1{width:60px}.grid_1,.grid_2{display:inline;float:left;margin-left:20px;margin-right:20px}.grid_2{width:160px}.grid_3{width:260px}.grid_3,.grid_4{display:inline;float:left;margin-left:20px;margin-right:20px}.grid_4{width:360px}.grid_5{width:460px}.grid_5,.grid_6{display:inline;float:left;margin-left:20px;margin-right:20px}.grid_6{width:560px}.grid_7{width:660px}.grid_7,.grid_8{display:inline;float:left;margin-left:20px;margin-right:20px}.grid_8{width:760px}.grid_9{width:860px}.grid_9,.grid_10{display:inline;float:left;margin-left:20px;margin-right:20px}.grid_10{width:960px}.grid_11{width:1060px}.grid_11,.grid_12{display:inline;float:left;margin-left:20px;margin-right:20px}.grid_12{width:1160px}.outer_content_wrapper{width:100%;position:relative}.inner_content_wrapper{width:1160px;margin:0 auto}.negative_margin_wrapper{margin-left:-20px;margin-right:-20px}}*{color:rgba(0,0,0,.8);padding:0;margin:0;box-sizing:border-box}body,html{height:100%;font-family:Roboto,sans-serif}h3{font-size:1.7em;font-weight:300;padding-bottom:5px;border-bottom:1px solid #ddd;margin-bottom:13.33333px}p{line-height:1.5}a{color:#4caf50;text-decoration:none}main{position:relative;padding-top:76px;padding-bottom:40px;min-height:100vh}main.portfolio{background:#eee}@media only screen and (max-width:480px){main{padding-top:60px;padding-bottom:10px}}li{padding:5px 0}.article_container{margin-top:40px;position:relative}@media only screen and (max-width:480px){.article_container{margin-top:30px}}aside{margin-top:60px;padding-left:40px}@media only screen and (max-width:480px){aside{margin-top:45px;padding-left:0}}.aside_container{margin-top:40px}.aside_container ul{padding:10px 20px}.aside_container ul li{position:relative;padding:0}.period{color:rgba(0,0,0,.6);font-size:.8em;position:absolute;top:0;right:0}.clearfix:after,.clearfix:before{content:"";display:table}.clearfix:after{clear:both}.page_header_container{background:#000;border-bottom:4px solid #4caf50;box-shadow:0 4px 4px rgba(0,0,0,.4);position:fixed;z-index:2}.page_header{padding:10px 0;position:relative}.page_header nav ul{list-style:none}.page_header nav ul li{display:inline-block;vertical-align:top;min-width:50%}.page_header nav ul li:not(:first-of-type){margin-left:-5px}.page_header nav ul li a{color:#fff;font-size:.8em;line-height:50px;text-transform:uppercase;display:block;padding:0 5px;text-align:center}.page_header nav ul li.nav_item_current a{color:#4caf50;border-bottom:2px solid #4caf50}@media only screen and (max-width:480px){.page_header nav ul{display:none}}.name{font-size:2em;color:#fff;line-height:1;margin-bottom:5px}.name span{color:#4caf50}@media only screen and (max-width:480px){.name{font-size:1.4em}}.position{font-size:1.2em;line-height:1;color:hsla(0,0%,100%,.7)}@media only screen and (max-width:480px){.position{font-size:1em}}.page_footer_container{background-color:#ddd}.page_footer{padding:13.33333px 0;color:rgba(0,0,0,.6);font-size:.9em}@media only screen and (max-width:480px){.page_footer{text-align:center}}.personal_container{padding:26.66667px;border:1px solid #ddd;border-radius:2px;background:#fafafa}.personal_container h1{font-size:2em;font-weight:300;margin:0 0 20px}@media only screen and (max-width:480px){.personal_container h1{font-size:1.8em;margin-bottom:10px}}@media only screen and (max-width:480px){.personal_container{text-align:center}}.personal{margin-right:0}@media only screen and (max-width:480px){.personal{margin-bottom:10px}}.photo_container{position:relative;margin:0;text-align:right;padding-right:15px}@media only screen and (max-width:480px){.photo_container{margin-left:0;text-align:center}}.photo{border:4px solid #4caf50;border-radius:50%}@media only screen and (max-width:480px){.photo{width:200px;margin-bottom:0}}@media only screen and (max-width:480px){margin-top:10px}.social{height:50px;margin-top:45px;position:relative}@media only screen and (max-width:480px){.social{margin-top:20px;margin-bottom:20px;text-align:center}}.social a{display:inline-block;vertical-align:middle}.social a:not(:first-child){margin-left:10px}.social a img{width:48px;height:48px;opacity:.3}.social a img:hover{opacity:.5}.download{font-size:14px;display:block;margin-top:10px}.job:not(:last-child){margin-bottom:40px}.job header{margin-bottom:10px;position:relative}.job a>*{color:#4caf50}.job a>:hover{color:#6ec071}.job .position{color:rgba(0,0,0,.5);font-size:14px}.freelance_projects,.responsibilities{margin-left:20px}.projects{margin-top:20px}.freelance_projects__details{color:rgba(0,0,0,.5);font-size:14px}.skills{list-style:none}.skills li{display:inline-block;vertical-align:top;line-height:30px;min-width:65px;padding:0 15px;background:#eee;margin:0 5px 20px 0;font-size:.9em;text-align:center}.courses li:not(:first-of-type){padding-top:20px}.courses li:not(:last-of-type){padding-bottom:20px}.course{color:rgba(0,0,0,.8);display:block}.course img{height:40px;display:block;opacity:1}.course:hover{color:rgba(0,0,0,.6)}.course:hover img{opacity:.7}.cert{color:#4caf50;font-size:.7em;text-transform:uppercase;margin-top:13.33333px}.cert:hover{color:#6ec071}.tip{font-size:12px;font-style:italic}@media only screen and (max-width:480px){.languages{margin-bottom:20px}}.languages li:not(:first-of-type){padding-top:10px}.languages li:not(:last-of-type){padding-bottom:10px}.lang_level{color:rgba(0,0,0,.6);position:absolute;top:center;right:0}.card{height:380px;background:#f5f5f5;border:1px solid #ddd;border-radius:2px;margin-bottom:20px;box-shadow:0 2px 2px rgba(0,0,0,.4);position:relative;overflow:hidden}.card img{width:inherit;height:inherit;display:block;padding:10px}.fork-me{color:#fff;background:#4caf50;text-align:center;box-shadow:2px 2px 4px rgba(0,0,0,.4);display:block;padding:10px 100px;position:absolute;top:60px;right:-90px;z-index:1;-webkit-transform:rotate(45deg);transform:rotate(45deg)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
